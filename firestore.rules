rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // LINKS
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      
      // Public can update click counts.
      // Owners and admins can update link details.
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings']) ||
                      (request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid)) && 
                       request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'description', 'rules', 'monetizable']));
    }

    // USERS
    match /users/{userId} {
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      allow read, list: if request.auth != null && isAdmin(request.auth.uid);
      
      // Users can update their own displayName and photoURL.
      // Admins can update any user's fields.
      allow update: if (request.auth != null && request.auth.uid == userId &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL'])) ||
                     (request.auth != null && isAdmin(request.auth.uid));
    }
    
    // SETTINGS
    match /settings/{settingId} {
        // Only admins can read or write global settings.
        allow read, write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // PAYOUT REQUESTS
    match /payoutRequests/{requestId} {
      allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if request.auth != null && isAdmin(request.auth.uid);
    }
      
    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin(request.auth.uid));
      // Created by a trusted server-side process (represented by allowing anyone, but secured by obscurity and function triggers).
      allow create: if true; 
    }
      
    // CLICKS
    match /clicks/{clickId} {
      // Created by a trusted server-side process.
      allow create: if true;

      // Reading/listing clicks is allowed by the link owner or an admin.
      allow read, list: if request.auth != null && (
                          get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid ||
                          isAdmin(request.auth.uid)
                        );

      // Nobody can update or delete click logs.
      allow update, delete: if false;
    }
  }
}
