rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // -- Functions --
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the authenticated user has the 'admin' role in their user document.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // -- Collections --

    // USERS
    // User profile documents.
    match /users/{userId} {
      // A user can create their own profile.
      allow create: if isOwner(userId);
      // A user can read their own profile, admins can read any profile.
      allow read: if isOwner(userId) || isAdmin();
      // Admins can list all users.
      allow list: if isAdmin();
      // A user can update their displayName. Admins can update any field.
      allow update: if (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName'])) || isAdmin();
      // Users cannot delete their own accounts.
      allow delete: if false;
    }

    // LINKS
    // The core documents for shortened links.
    match /links/{linkId} {
      // Anyone can read a link document (needed for redirection).
      allow read: if true;
      // An authenticated user can create a link for themselves.
      allow create: if isOwner(request.resource.data.userId);
      // The owner or an admin can delete a link.
      allow delete: if isOwner(resource.data.userId) || isAdmin();
      // Public can update only click/earning counts. Owner/Admin can update details.
      allow update: if (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings', 'earningsByCpm'])) ||
                       (isOwner(resource.data.userId) || isAdmin());
    }

    // CLICKS
    // Log of every individual click event.
    match /clicks/{clickId} {
      // Clicks are created by our backend logic, so this must be public.
      allow create: if true;
      // An owner can read/list clicks for their own links. Admins can read/list any clicks.
      allow read, list: if request.auth != null && (
                          get(/databases/$(database)/documents/links/$(request.query.linkId)).data.userId == request.auth.uid ||
                          isAdmin()
                        );
      // Click logs are immutable.
      allow update, delete: if false;
    }
    
    // CPM HISTORY
    // Log of CPM rate changes over time.
    match /cpmHistory/{cpmId} {
        // Anyone can read CPM rates.
        allow read: if true;
        // Only admins can modify CPM history.
        allow write: if isAdmin();
    }

    // PAYOUT REQUESTS
    // User requests to withdraw their earnings.
    match /payoutRequests/{payoutId} {
        // A user can create a request for themselves.
        allow create: if isOwner(request.resource.data.userId);
        // A user can read/list their own requests. Admins can read/list any.
        allow read, list: if isOwner(resource.data.userId) || isAdmin();
        // Only admins can approve or reject (update) a request.
        allow update: if isAdmin();
    }
    
    // NOTIFICATIONS
    // System-generated notifications for users.
    match /notifications/{notificationId} {
      // User can read their own notifications. Admins can read any.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Notifications are created by the system.
      allow create: if true;
    }
  }
}
