rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Links collection rules
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks'])) || 
                      (request.auth != null && resource.data.userId == request.auth.uid);
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow user to update their own profile, but not their role
      // Allow admin to update any user profile, including the role
      allow update: if (request.auth != null && request.auth.uid == userId && !('role' in request.resource.data)) ||
                      (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // Allow admins to list all users
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Payout Requests collection rules
    match /payoutRequests/{requestId} {
      // User can create a request for themselves
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // User can read their own requests. Admin can read all requests.
      allow read: if (request.auth != null && resource.data.userId == request.auth.uid) ||
                    (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // Admin can update any request (to approve/reject)
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Admin can list all requests
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
