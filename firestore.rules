
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin.
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read and write any user document.
      // Users can read and update their own document.
      allow read, update: if isAdmin() || request.auth.uid == userId;
      // Any authenticated user can create their own user document.
      allow create: if request.auth.uid == userId;
    }

    // Rules for the 'links' collection
    match /links/{linkId} {
      // Anyone can retrieve a single link document for redirection.
      allow get: if true;
      
      // Admins can list all links. Users can list their own links.
      allow list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);
      
      // Users can create links for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // Public can update specific counters. Admins or owners can update anything.
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings']))
                    || isAdmin()
                    || (request.auth.uid == resource.data.userId);

      // Admins or owners can delete links.
      allow delete: if isAdmin() || (request.auth.uid == resource.data.userId);
    }

    // Rules for the 'clicks' collection
    match /clicks/{clickId} {
      // Anyone can create a click record. This is essential for the link gate.
      allow create: if true;
      // Admins can read all clicks. Users can read clicks for links they own.
      allow read, list: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/links/$(request.query.where.linkId)).data.userId == request.auth.uid);
    }

    // Rules for 'payoutRequests' collection
    match /payoutRequests/{requestId} {
      // Admins can read/update all requests. Users can manage their own.
      allow read, list: if isAdmin() || (request.auth != null && resource.data.userId == request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
    }
    
    // Rules for 'cpmHistory' collection
    match /cpmHistory/{cpmId} {
      // Any authenticated user can read the CPM history.
      allow read, list: if request.auth != null;
      // Only admins can modify the CPM history.
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for 'notifications' collection
    match /notifications/{notificationId} {
      // Users can only read notifications intended for them. Admins can create them.
      allow read, list: if request.auth.uid == resource.data.userId;
      allow create: if isAdmin();
    }
  }
}
