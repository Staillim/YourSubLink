rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks'])) || 
                      (request.auth != null && resource.data.userId == request.auth.uid);
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      // Admin can list all users
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      allow create: if request.auth != null && request.auth.uid == userId;

      // User can update their own displayName, photoURL, and payoutsPending field.
      // They cannot change their role or other sensitive fields.
      allow update: if request.auth != null && request.auth.uid == userId &&
                      request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL', 'payoutsPending'])
                   
                   // Admin can update any field on any user.
                   || request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /payoutRequests/{requestId} {
      // User can create and read their own requests
      allow create, read: if request.auth != null && request.resource.data.userId == request.auth.uid;
      
      // Admin can read and update all requests (to change status)
      allow list, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
