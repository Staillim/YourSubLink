
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow create: if isUser(userId);
      allow read, update: if isUser(userId) || isAdmin();
      allow list: if isAdmin();
    }

    match /links/{linkId} {
      // Authenticated users can create links for themselves.
      allow create: if isUser(request.resource.data.userId);
      
      // Public read access for anyone to query and view links.
      allow get, list: if true;
      
      // Users can update/delete their own links.
      allow update, delete: if isUser(resource.data.userId);

      // Admins have full read/write access to all links.
      allow write: if isAdmin();
    }
    
    match /clicks/{clickId} {
        // The backend API route is the only one creating clicks.
        allow create: if true;

        // User can read their own clicks, admins can read all.
        allow list: if isUser(resource.data.userId) || isAdmin();
        
        // Admins can get any specific click document.
        allow get: if isAdmin();
    }

    match /payoutRequests/{requestId} {
        // A user can create a request for themselves.
        allow create: if isUser(request.resource.data.userId);
        
        // A user can read their own requests. Admins can read all.
        allow read: if isUser(resource.data.userId) || isAdmin();
        
        // Only admins can update (approve/reject) requests.
        allow update: if isAdmin();
    }

    match /cpmHistory/{cpmId} {
        // Anyone can read the CPM history to calculate earnings.
        allow get, list: if true;
        
        // Only admins can create/update CPM history.
        allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
        // Users can read their own notifications.
        allow read: if isUser(resource.data.userId);
        
        // Admins can list all notifications for the admin bell.
        allow list: if isAdmin();
        
        // Anyone (the backend) can create notifications.
        allow create: if true; 
    }
  }
}
