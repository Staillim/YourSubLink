
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ================================
    // Funciones Helpers
    // ================================
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      // Verifica que el usuario esté autenticado y que su documento en 'users' tenga el rol 'admin'.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      // Verifica que el usuario autenticado sea el mismo que el ID proporcionado.
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function userIsNotSuspended(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.accountStatus != 'suspended';
    }

    // ================================
    // Colección: links
    // ================================
    match /links/{linkId} {
      // LECTURA:
      // - Cualquiera puede leer un documento de enlace individual si conoce su ID.
      // - Se permite una consulta pública específica y limitada para buscar un enlace por su 'shortId'.
      allow get: if true;
      allow list: if request.query.limit <= 1 && request.query.keys().hasOnly(['where', 'limit']);

      // ESCRITURA:
      // - Solo el propietario del enlace puede crearlo, actualizarlo o eliminarlo.
      allow create, update, delete: if isOwner(request.resource.data.userId);
    }
    
    // ================================
    // Colección: clicks
    // ================================
    match /clicks/{clickId} {
        // ESCRITURA:
        // - Cualquiera puede crear un documento de 'click' (registrar una visita).
        // - La regla verifica que el campo 'userId' exista en los datos del nuevo click.
        // - Luego, usa esa 'userId' para verificar que la cuenta del propietario del enlace no esté suspendida.
        // - Esto protege el sistema de registrar visitas a enlaces de usuarios baneados.
        allow create: if 'userId' in request.resource.data && userIsNotSuspended(request.resource.data.userId);

        // LECTURA Y MODIFICACIÓN:
        // - Nadie puede leer, actualizar o borrar los documentos de clicks una vez creados.
        allow read, update, delete: if false;
    }

    // ================================
    // Colección: users
    // ================================
    match /users/{userId} {
      // LECTURA:
      // - Cualquiera puede obtener los datos de un perfil de usuario (necesario para verificar el estado de la cuenta).
      allow get: if true;
      
      // ESCRITURA:
      // - Solo el propietario del perfil puede modificar sus propios datos.
      allow write: if isOwner(userId);
    }
    
    // ================================
    // Colección: notifications
    // ================================
    match /notifications/{notificationId} {
        // LECTURA Y ESCRITURA:
        // - Un usuario solo puede leer y escribir sus propias notificaciones.
        allow read, write: if isOwner(resource.data.userId);
        
        // LISTADO:
        // - Un usuario puede listar (consultar) únicamente sus propias notificaciones.
        allow list: if isOwner(request.query.where.value);
    }

    // ================================
    // Colección: cpmHistory
    // ================================
    match /cpmHistory/{historyId} {
      // LECTURA:
      // - Cualquier usuario autenticado puede leer el historial de CPM.
      allow read: if isAuthenticated();
      
      // ESCRITURA:
      // - Solo un administrador puede modificar el historial de CPM.
      allow write: if isAdmin();
    }
    
    // ================================
    // Colección: payoutRequests
    // ================================
    match /payoutRequests/{requestId} {
      // LECTURA Y LISTADO:
      // - Un usuario puede leer y listar sus propias solicitudes de pago.
      allow get: if isOwner(resource.data.userId) || isAdmin();
      allow list: if isOwner(request.query.where.value) || isAdmin();
      
      // ESCRITURA:
      // - Un usuario puede crear una nueva solicitud de pago para sí mismo.
      // - Solo un administrador puede actualizar una solicitud (para aprobarla o rechazarla).
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isAdmin();
    }
    
    // ================================
    // Colección: supportTickets
    // ================================
    match /supportTickets/{ticketId} {
        // ACCESO GENERAL:
        // - Solo el propietario del ticket o un administrador pueden acceder a él.
        allow get, create, update, list: if isOwner(resource.data.userId) || isAdmin();
        
        // Subcolección de Mensajes
        match /messages/{messageId} {
            // - Solo el propietario del ticket principal o un administrador pueden leer y crear mensajes dentro del ticket.
            allow get, list, create: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || isAdmin();
        }
    }
  }
}
