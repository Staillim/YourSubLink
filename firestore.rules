rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user is authenticated and has the 'admin' role in their user document.
      // Important: this assumes you have a 'users' collection where roles are stored.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Users can read their own profile.
      // Admins can read any profile.
      allow get: if request.auth.uid == userId || isAdmin();
      // Users can update their own profile.
      // Admins can update any profile.
      allow update: if request.auth.uid == userId || isAdmin();
      // Admins can list all users.
      allow list: if isAdmin();
      // Allow user creation for any authenticated user (e.g., after signup).
      allow create: if request.auth.uid == userId;
    }

    match /links/{linkId} {
      // Anyone can read a link document to get the original URL for redirection.
      allow get: if true;
      // Only authenticated users can create links.
      allow create: if request.auth != null;
      // Only the owner of the link or an admin can update or delete it.
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();
      
      // Allow a public client to increment click counts. This is what the recordClick function uses.
      // It's secure because it only allows incrementing specific fields, not setting them arbitrarily.
      allow update: if request.auth == null
                    && request.resource.data.clicks == resource.data.clicks + 1;

      // Admins can list all links for the admin panel.
      allow list: if isAdmin();
    }
    
    match /clicks/{clickId} {
      // Anyone can create a click record when they visit a link.
      allow create: if true;
      // Only admins can read or list the raw click data.
      allow read, list: if isAdmin();
    }

    match /dailyStats/{day} {
        // The recordClick function can be triggered by anyone, so it needs to be able to create or update daily stats.
        allow create, update: if true;
        // Only admins can read or list the daily stats.
        allow read, list: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        // The system (via client-side logic from recordClick) can create notifications.
        allow create: if true; 
        // Any authenticated user can read their own notifications.
        allow read, list: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /payoutRequests/{requestId} {
        // Authenticated users can create payout requests for themselves.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Users can read their own requests. Admins can read all requests.
        allow get, list: if (request.auth.uid == resource.data.userId) || isAdmin();
        // Only admins can update the status of a request (approve/reject).
        allow update: if isAdmin();
    }
    
    match /settings/global {
      // All users and clients can read global settings (like CPM rate).
      allow get: if true;
      // Only admins can change the settings.
      allow write: if isAdmin();
    }
    
    match /cpmHistory/{historyId} {
        // Anyone can read the history to find the active rate.
        allow get, list: if true;
        // Only admins can create/update the history.
        allow write: if isAdmin();
    }
  }
}
