
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Links collection rules
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks'])) || 
                      (request.auth != null && resource.data.userId == request.auth.uid);
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null;
      allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow users to update their own info, but not their role or earnings.
      // Admins can update anything.
      allow update: if request.auth != null && 
                    ( (request.auth.uid == userId && !('role' in request.resource.data) && !('generatedEarnings' in request.resource.data) && !('paidEarnings' in request.resource.data) && !('payoutsPending' in request.resource.data) ) ||
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin') );
    }

    // Payout requests rules
    match /payoutRequests/{requestId} {
      // Users can create and read their own requests.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      // Admins can read, list, and update all requests (to change status).
      allow list, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
