rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      // No allow delete for users
    }

    match /links/{linkId} {
      allow read;
      allow create: if isOwner(request.resource.data.userId);
      // Allow owner to update, or allow anyone to update (for public click tracking)
      allow update(path, request, resource): if (isOwner(resource.data.userId) || isAdmin()) || (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings', 'earningsByCpm']));
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /clicks/{clickId} {
      // Allow list (query) if the user owns the link being queried.
      allow list: if isAdmin() || (exists(/databases/$(database)/documents/links/$(request.query.linkId)) && get(/databases/$(database)/documents/links/$(request.query.linkId)).data.userId == request.auth.uid);
      
      // Allow read/get for a single document if the user owns the link.
      allow read: if isAdmin() || isOwner(get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId);

      // Anyone can create a click document.
      allow create;
    }
    
    match /cpmHistory/{cpmId} {
        allow read; // Anyone can read CPM rates
        allow write: if isAdmin(); // Only admins can change them
    }

    match /payoutRequests/{payoutId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow update: if isAdmin(); // Only admins can approve/reject
    }
    
    match /settings/global {
      allow read;
      allow write: if isAdmin();
    }

    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create; // System/anyone can create notifications (e.g., for milestones)
    }
  }
}
