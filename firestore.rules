
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      allow read: if true; 
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
    }

    // Rules for the 'links' collection
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // Allow update if the user is the owner OR if the update only targets the counters.
      // This allows our server-side API to increment counters without being authenticated as the user.
      allow update: if (request.auth.uid == resource.data.userId) || 
                       (request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['clicks', 'realClicks', 'generatedEarnings']));
                         
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Rules for the 'clicks' collection
    // This collection is write-only from our trusted backend. No client should read it.
    match /clicks/{clickId} {
      allow create: if true; // Only our backend API will call this
      allow read: if false; 
      allow update, delete: if false;
    }
    
    // Rules for 'payoutRequests' collection
    match /payoutRequests/{payoutId} {
        allow read, update: if isAdmin();
        allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Rules for 'cpmHistory'
    match /cpmHistory/{cpmId} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Rules for 'notifications'
    match /notifications/{notificationId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if true; // Created by server
    }
  }
}
