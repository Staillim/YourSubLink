rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();
      // Admins can list all users
      allow list: if isAdmin();
    }

    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null;

      // Allow listing for:
      // 1. Public queries finding a single link by shortId (for redirection)
      // 2. Authenticated users querying for their own links
      // 3. Admins querying all links
      allow list: if (request.query.where.size == 1 && request.query.where.keys()[0] == 'shortId') ||
                   (request.auth != null && request.query.where.userId == request.auth.uid) || 
                   isAdmin();
      
      // Allow the owner or an admin to update/delete
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();
      
      // Allow public client to increment click counts and earnings, but not set them arbitrarily.
      allow update: if request.auth == null
                    && request.resource.data.clicks == resource.data.clicks + 1;
    }
    
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow create: if true;
        allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /payoutRequests/{requestId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read, list: if (request.auth != null && resource.data.userId == request.auth.uid) || isAdmin();
        allow update: if isAdmin();
    }
    
    match /settings/global {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /cpmHistory/{historyId} {
        allow get, list: if true;
        allow write: if isAdmin();
    }
  }
}
