rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default Deny: By default, no one can read or write to the database.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users Collection
    // - Authenticated users can read any profile (to get creator info).
    // - Users can only create and update their own profile.
    // - Admins can update any user's profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Links Collection
    // - Any visitor can read any link document (necessary for the redirection page).
    // - Authenticated users can create links.
    // - Only the owner of a link or an admin can update or delete it.
    match /links/{linkId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Clicks Collection
    // - Any visitor (authenticated or not) can create a click document.
    // - The document MUST only contain `linkId` and `timestamp`. This is crucial for security.
    // - No one can read, update or delete individual click documents from the client. They are processed by a backend service.
    match /clicks/{clickId} {
        allow create: if request.resource.data.keys().hasAll(['linkId', 'timestamp']) && request.resource.data.size() == 2;
        allow read, update, delete: if false;
    }

    // Payout Requests Collection
    // - Users can only create and read their own requests.
    // - Admins can read, update, or delete any request.
    match /payoutRequests/{payoutId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // CPM History Collection
    // - Only admins can read or write.
    match /cpmHistory/{historyId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Notifications Collection
    // - Users can only read their own notifications.
    // - No one can create/update/delete notifications from the client (they are created by backend/admin actions).
    match /notifications/{notificationId} {
      allow read: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Support Tickets Collection
    match /supportTickets/{ticketId} {
        // Users can create tickets and read/write to their own tickets.
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, write: if resource.data.userId == request.auth.uid;

        // Admins can read/write to any ticket.
        allow list, read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
        // Messages Subcollection
        match /messages/{messageId} {
            // Users can read/write messages in their own tickets.
            allow read, write: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid;

            // Admins can read/write messages in any ticket.
            allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        }
    }
  }
}
