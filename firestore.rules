
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users: Can read their own profile, admins can read any.
    // Anyone can create a user profile (on signup).
    // Users can update their own profile. Admins can update any.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Links: Anyone can read link data.
    // Authenticated users can create links.
    // Users can only update/delete their own links. Admins can manage any.
    match /links/{linkId} {
      allow read;
      allow create: if request.auth != null;
      allow update, delete: if resource.data.userId == request.auth.uid 
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Clicks: Anyone can create a click log (via server API).
    // Users can read clicks associated with their own links for stats pages.
    // Admins can read any click log.
    match /clicks/{clickId} {
      allow create: if request.auth != null;
      allow read: if get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Payout Requests: Users can create/read their own. Admins can manage all.
    match /payoutRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if resource.data.userId == request.auth.uid 
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Notifications: Can only be read by the assigned user or an admin.
    match /notifications/{notificationId} {
        allow read: if resource.data.userId == request.auth.uid
        || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // CPM History: Admin-only read/write access.
    match /cpmHistory/{historyId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
