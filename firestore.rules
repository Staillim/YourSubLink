rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Check if the link owner's account is active
    function linkOwnerIsActive(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.accountStatus == 'active';
    }

    // LINKS
    match /links/{linkId} {
      // Anyone can read a link by its ID
      allow get: if true;
      // Anyone can query for a link by its shortId, which is crucial for the link page to work.
      allow list: if request.query.where.size() == 1 &&
                     'shortId' in request.query.where &&
                     request.query.limit <= 1;

      // Only the owner can create, update, or delete their own links
      allow create, update, delete: if isOwner(request.resource.data.userId);
    }

    // CLICKS (Visits)
    match /clicks/{clickId} {
      // Any visitor can register their visit IF the owner of the link is not suspended.
      allow create: if linkOwnerIsActive(request.resource.data.userId);

      // Nobody can read, edit, or delete individual click documents directly.
      allow read, update, delete: if false;
    }

    // USERS
    match /users/{userId} {
      // Anyone can read a user's profile to check their status.
      allow get: if true;
      
      // Only the owner or an admin can write/update a user profile.
      allow write: if isOwner(userId) || isAdmin();
    }

    // NOTIFICATIONS
    match /notifications/{notificationId} {
      allow read, write, list: if isOwner(resource.data.userId);
    }

    // CPM HISTORY
    match /cpmHistory/{historyId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // PAYOUT REQUESTS
    match /payoutRequests/{requestId} {
      allow create: if isOwner(request.resource.data.userId);
      allow list, read: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin();
    }

    // SUPPORT TICKETS
    match /supportTickets/{ticketId} {
      allow read, create, update, list: if isOwner(resource.data.userId) || isAdmin();

      match /messages/{messageId} {
        allow read, create: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
      }
    }
    
    // ADMIN LIST PERMISSIONS
    match /users/{userId} {
      allow list: if isAdmin();
    }
    match /links/{linkId} {
        allow list: if isAdmin();
    }

  }
}
