rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
    }

    match /links/{linkId} {
      // Allow public access to read a link for redirection
      allow get: if true;
      // Allow authenticated user to create a link
      allow create: if request.auth != null;
      // Allow owner or admin to update/delete
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();

      // Allow listing for specific queries:
      // 1. Public query by shortId for redirection.
      // 2. Authenticated user querying for their own links.
      // 3. Admins querying all links.
      allow list: if (request.query.keys().hasOnly(['where']) && request.query.where.size == 1 && request.query.where.shortId != null) ||
                    (request.auth != null && resource.data.userId == request.auth.uid) || 
                    isAdmin();
    }
    
    match /clicks/{clickId} {
      allow create: if true;
      allow get, list: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      allow create: if true; // System can create notifications
      // User can read their own notifications
      allow get, list: if request.auth.uid == resource.data.userId || isAdmin();
    }

    match /payoutRequests/{requestId} {
      allow create: if request.auth != null;
      // User can read/list their own requests, Admins can do anything
      allow get, list: if request.auth.uid == resource.data.userId || isAdmin();
      allow update: if isAdmin();
    }
    
    // Admin-only collections below
    match /cpmHistory/{historyId} {
      allow read, write: if isAdmin();
    }

    match /dailyStats/{day} {
      allow read, write: if isAdmin();
    }

    match /settings/global {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}