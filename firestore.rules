
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the users collection
    match /users/{userId} {
      // Admins can read/write any user document
      allow read, write: if isAdmin();
      // Users can only read/update their own document
      allow get, update: if request.auth.uid == userId;
    }

    // Rules for the links collection
    match /links/{linkId} {
      // Anyone can read a link (for redirection)
      allow get: if true;
      // Authenticated users can create links
      allow create: if request.auth.uid != null;
      // Users can only update/delete their own links, admins can do anything
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();
    }
    
    // Rules for the clicks collection (write-only for clients)
    match /clicks/{clickId} {
      allow create: if true;
      allow read: if isAdmin(); // Only admins can read click logs
    }
    
    // Rules for payoutRequests
    match /payoutRequests/{payoutId} {
        // Admins can read/write all requests
        allow read, write: if isAdmin();
        // Users can create requests and read their own
        allow create: if request.auth.uid != null;
        allow list: if request.auth.uid == request.resource.data.userId;
    }
    
    // Rules for cpmHistory
    match /cpmHistory/{historyId} {
        allow read: if request.auth.uid != null; // All auth users can read
        allow write: if isAdmin(); // Only admins can change it
    }

    // Rules for notifications
    match /notifications/{notificationId} {
        // Users can read their own notifications
        allow read: if request.auth.uid == resource.data.userId;
        // The server/admin can create notifications
        allow create: if isAdmin(); // Assuming notifications are created by a trusted source
    }
    
    // --- NEW RULES FOR CHAT ---
    match /chats/{userId} {
      // An admin can read and write to any chat document
      // A user can read and write to their own chat document
      allow read, write: if isAdmin() || request.auth.uid == userId;
      
      // Rules for the messages subcollection
      match /messages/{messageId} {
         // An admin can read and write to any message subcollection
         // A user can read and write messages in their own chat
         allow read, write: if isAdmin() || request.auth.uid == userId;
      }
    }
  }
}
