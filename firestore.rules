rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      // Check for the existence of the user document and their role.
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
    }
    
    match /links/{linkId} {
      allow create: if isOwner(request.resource.data.userId) || isAdmin();
      allow read: if true;
      allow update: if (isOwner(resource.data.userId) || isAdmin()) ||
                      (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings']));
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin();
    }

    match /payoutRequests/{requestId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow list: if (request.query.where.path == 'userId' && request.query.where.value == request.auth.uid) || isAdmin();
        allow update: if isAdmin();
    }

    match /cpmHistory/{cpmId} {
        allow read, list: if request.auth != null;
        allow create, update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, list, update: if isOwner(resource.data.userId) || isAdmin();
        allow create: if isAdmin();
    }
    
    match /supportTickets/{ticketId} {
      allow create: if isOwner(request.resource.data.userId);
      allow list: if (request.query.where.path == 'userId' && request.query.where.value == request.auth.uid) || isAdmin();
      allow read: if isOwner(resource.data.userId) || isAdmin();
      // Admins can update any field. Users can ONLY update the 'isReadByUser' field.
      allow update: if isAdmin() || (isOwner(resource.data.userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isReadByUser']));
      
      match /messages/{messageId} {
        // Anyone can read messages if they own the parent ticket or are an admin.
        allow read, list: if isAdmin() || get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid;
        // Messages can only be created if the ticket is NOT completed.
        // This is checked by reading the parent ticket's status.
        allow create: if (isAdmin() || request.resource.data.senderId == request.auth.uid) &&
                         get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.status != 'completed';
      }
    }
  }
}
