rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      // Any authenticated user can read a user's profile
      allow read: if request.auth != null;
      // A user can write to their own document, or an admin can write to any.
      allow write: if request.auth.uid == userId || isAdmin();
      // Only admins can list all users.
      allow list: if isAdmin();
    }

    match /links/{linkId} {
      // Anyone can read a link document for redirection.
      allow get: if true;
      
      // Different list rules for different scenarios
      allow list: if 
                  // 1. Allow public queries to find a link by its shortId
                  (request.auth == null && request.query.where.shortId is string) ||
                  // 2. Allow authenticated users to list their own links
                  (request.auth != null && request.query.where.userId == request.auth.uid) ||
                  // 3. Allow admins to list all links without filters
                  isAdmin();
                  
      allow create: if request.auth != null;
      
      // Allow update for two scenarios:
      // 1. The owner of the link or an admin can update any field.
      // 2. A public client can ONLY increment clicks and earnings.
      allow update: if (resource.data.userId == request.auth.uid || isAdmin()) || 
                     (request.auth == null &&
                      request.resource.data.clicks > resource.data.clicks &&
                      request.resource.data.keys().hasAny(['clicks', 'realClicks', 'generatedEarnings']));
                      
      allow delete: if resource.data.userId == request.auth.uid || isAdmin();
    }
    
    match /clicks/{clickId} {
      allow create: if true; // Anyone can create a click record
      // Allow the system to check for recent clicks for a specific visitor.
      allow list: if true;
      // Admins can read individual click documents for analysis
      allow get: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow create: if true; // System can create notifications
        // An authenticated user can read notifications intended for them
        allow list, get: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /payoutRequests/{requestId} {
        allow create: if request.auth != null;
        // A user can read/list their own requests, admins can see all.
        allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
        // Only admins can approve/reject requests
        allow update: if isAdmin();
    }
    
    match /cpmHistory/{historyId} {
        allow read, list: if true;
        allow write: if isAdmin();
    }
  }
}
