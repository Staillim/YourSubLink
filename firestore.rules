rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }

    match /links/{linkId} {
      allow read;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Allow link owner to update title/description/rules
      // Allow server-side process to update click counts
      allow update: if (request.auth != null && resource.data.userId == request.auth.uid && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['title', 'description', 'rules', 'monetizable'])) || 
                     (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings', 'paidEarnings']));
      
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /clicks/{clickId} {
      // Server-side process creates clicks
      allow create;
      // Link owner and admins can read click data for stats
      allow read: if request.auth != null && (get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    match /payoutRequests/{requestId} {
      allow read, create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Admins can read all and update status
      allow list, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /notifications/{notificationId} {
        allow read: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Server-side process creates notifications
        allow create;
    }

    match /cpmHistory/{historyId} {
       allow read, list;
       allow create, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}