rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    match /links/{linkId} {
      allow read;
      allow create, delete: if request.auth != null && (isOwner(request.resource.data.userId) || isAdmin());
      // Allow owners/admins to update.
      // Allow non-authenticated users to update ONLY the 'clicks' and 'generatedEarnings' fields.
      allow update: if (request.auth != null && (isOwner(request.resource.data.userId) || isAdmin())) ||
                     (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings']));
    }

    match /clicks/{clickId} {
      allow read, create;
    }

    match /cpmHistory/{cpmId} {
      allow read;
      allow create, update: if isAdmin();
    }

    match /payoutRequests/{payoutId} {
      allow create: if request.auth != null && isOwner(request.resource.data.userId);
      allow read: if request.auth != null && (isOwner(resource.data.userId) || isAdmin());
      allow update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && (isOwner(resource.data.userId) || isAdmin());
        allow create: if isAdmin();
    }

    match /supportTickets/{ticketId} {
      allow list: if isAdmin();
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId) || isAdmin();

      match /messages/{messageId} {
        allow read: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
        // Allow write only if ticket is not completed, OR if the writer is an admin.
        allow create: if (get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.status != 'completed' && isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId)) || isAdmin();
      }
    }
  }
}
