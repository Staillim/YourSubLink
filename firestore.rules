rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user has the 'admin' role in their user document.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      // Check if the authenticated user's ID matches the provided userId.
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
    }

    match /links/{linkId} {
      // Allow public fetching of a single link document (for redirection logic).
      allow get: if true;
      
      // Allow listing links only for the owner or an admin.
      // This is crucial for dashboard/management pages.
      allow list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);

      // Allow creating a link if the user ID in the document matches the authenticated user.
      allow create: if isOwner(request.resource.data.userId);

      // Allow updates/deletes for the owner or an admin.
      // Also, allow public updates ONLY to increment 'clicks' or 'generatedEarnings'.
      allow update: if isAdmin() || isOwner(resource.data.userId) ||
                      (request.resource.data.diff(resource.data).affectedKeys()
                        .hasOnly(['clicks', 'generatedEarnings']));
                        
      allow delete: if isAdmin() || isOwner(resource.data.userId);
    }

    match /clicks/{clickId} {
      // Anyone can create a click record.
      allow create: if true;
      // Reading/listing clicks is restricted to the link owner or an admin.
      allow read, list: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/links/$(request.query.where.linkId)).data.userId == request.auth.uid);
    }

    match /payoutRequests/{requestId} {
      // Users can manage their own payout requests. Admins can manage all.
      allow create: if isOwner(request.resource.data.userId);
      allow read, list: if isAdmin() || isOwner(resource.data.userId);
      allow update: if isAdmin();
    }
    
    match /cpmHistory/{cpmId} {
      // Any authenticated user can read CPM history. Only admins can modify it.
      allow read, list: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
      // Users can only read their own notifications.
      allow read, list: if isOwner(resource.data.userId);
      // Admins (or system functions) can create notifications.
      allow create: if isAdmin();
    }
  }
}
