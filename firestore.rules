rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // LINKS:
    // - Anyone can read a link document if they know its ID.
    //   This is required for the link redirection page (`/link/[shortId]`) to fetch link details.
    // - Users can create links.
    // - Users can update or delete links they own.
    // - Admins can read, update, or delete any link.
    match /links/{linkId} {
      allow get: if true;
      allow list: if isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // CLICKS:
    // - Anyone can create a click log. This is the core of the client-side counting system.
    //   The ClientComponent in the link redirection page creates a new document here.
    // - Admins can read all click logs for analytics and fraud detection.
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list, update: if isAdmin();
    }

    // USERS:
    // - Users can read their own profile.
    // - Users can only update their own `displayName`.
    // - Admins can read and update any user profile.
    match /users/{userId} {
      allow get: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if (isOwner(userId) && request.resource.data.keys().hasOnly(['displayName'])) || isAdmin();
    }

    // NOTIFICATIONS:
    // - Users can list/read notifications where their UID matches.
    // - Admins can create notifications (system-wide announcements).
    // - Users can update their own notifications (e.g., mark as read).
    match /notifications/{notificationId} {
        allow read, list: if isOwner(resource.data.userId) || isAdmin();
        allow create: if isAdmin();
        allow update: if isOwner(resource.data.userId) || isAdmin();
    }

    // PAYOUT REQUESTS:
    // - Users can create their own payout requests.
    // - Users can read their own payout requests.
    // - Admins can read and update all payout requests.
    match /payoutRequests/{payoutId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, list: if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin();
    }
    
    // CPM HISTORY:
    // - Anyone can read the CPM history (needed for client-side earnings calculation).
    // - Only admins can write to the CPM history.
    match /cpmHistory/{cpmId} {
      allow read, list: if true;
      allow write: if isAdmin();
    }

    // SUPPORT TICKETS:
    // - Users can manage their own support tickets.
    // - Admins can manage all support tickets.
    match /supportTickets/{ticketId} {
      allow read, create, update, list: if isOwner(resource.data.userId) || isOwner(request.resource.data.userId) || isAdmin();
      
      // MESSAGES SUB-COLLECTION:
      // - Users can read/write messages in their own tickets.
      // - Admins can read/write messages in any ticket.
       match /messages/{messageId} {
          allow read, create: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
       }
    }
    
  }
}
