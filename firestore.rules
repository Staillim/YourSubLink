rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isNumber(value) {
      return value is number;
    }

    function isString(value) {
      return value is string;
    }

    function isBoolean(value) {
      return value is bool;
    }
    
    function isTimestamp(value) {
      return value is timestamp;
    }

    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Admins can read/write any user profile.
      // Users can only read/update their own profile.
      allow read: if isAdmin() || isOwner(userId);
      allow update: if isAdmin() || isOwner(userId);
      allow create, delete: if isAdmin();
    }
    
    match /payoutRequests/{payoutId} {
        // Users can create their own payout requests.
        allow create: if isOwner(request.resource.data.userId);
        // Admins can read all requests and update their status.
        allow read, update: if isAdmin();
    }
    
    match /cpmHistory/{historyId} {
        // Only admins can manage CPM history.
        allow read, create, update: if isAdmin();
    }

    match /links/{linkId} {
      // Anyone can read a link document to get the original URL.
      allow get: if true;
      // Users can list their own links, admins can list all links.
      allow list: if request.auth != null;
      // Users can create links for themselves.
      allow create: if isOwner(request.resource.data.userId);
      // Users can update their own links, admins can update any link.
      allow update: if isOwner(resource.data.userId) || isAdmin();
      // Users can delete their own links, admins can delete any link.
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /clicks/{clickId} {
      // Anyone can create a click document. This is crucial for the link gate to work.
      allow create: if true;
      // Only admins can read, update or delete click logs.
      allow read, update, delete: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        // Users can read their own notifications.
        allow read: if isOwner(resource.data.userId);
        // Users can mark their own notifications as read.
        allow update: if isOwner(resource.data.userId);
        // Notifications are created by the system (backend/admin actions), not directly by users.
        allow create: if isAdmin();
    }
    
    match /supportTickets/{ticketId} {
        // Users can read their own tickets, admins can read all.
        allow get: if isOwner(resource.data.userId) || isAdmin();
        allow list: if request.auth != null; // Either user for their own or admin for all.
        // Users can create tickets.
        allow create: if isOwner(request.resource.data.userId);
        // Admins and owners can update (e.g. status, read flag).
        allow update: if isOwner(resource.data.userId) || isAdmin();
        
        match /messages/{messageId} {
            // Admins and owners can read messages in their tickets.
            allow read: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || isAdmin();
            // Admins and owners can write messages.
            allow create: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || isAdmin();
        }
    }
  }
}
