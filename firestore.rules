rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get: if true; 
      allow list, write: if isAdmin();
      allow update: if isOwner(userId);
      allow delete: if false;
    }

    match /links/{linkId} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.userId);
      allow update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /clicks/{clickId} {
      allow create: if true;
      allow read, update, delete: if false;
    }

    match /payoutRequests/{payoutId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isOwner(request.resource.data.userId);
      allow list, get, update: if isAdmin();
      allow delete: if false;
    }

    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow write: if isAdmin();
      allow create, update, delete: if false;
    }

    match /supportTickets/{ticketId} {
      allow read, write: if isOwner(resource.data.userId) || isAdmin();
      allow get, list: if isAdmin();
      
      match /messages/{messageId} {
        allow create: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
        allow read: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
      }
    }
    
    match /cpmHistory/{historyId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
