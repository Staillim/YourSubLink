
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // LINKS
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks'])) || 
                      (request.auth != null && resource.data.userId == request.auth.uid);
    }

    // USERS
    match /users/{userId} {
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow read: if request.auth != null;
        allow list: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
        // Allow users to update their own display name and photo. Admins can update any field.
        allow update: if (request.auth != null && request.auth.uid == userId &&
                          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'photoURL'])) ||
                         (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // PAYOUT REQUESTS
    match /payoutRequests/{requestId} {
        allow read, list: if request.auth != null && (resource.data.userId == request.auth.uid || 
                             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');

        // Allow users to create requests for themselves.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

        // Admins can update any payout request
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
