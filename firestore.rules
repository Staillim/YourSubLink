rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can read/update their own profile. Admins can read/write any profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth.uid == userId;
      // Admins can write to any user document
      allow write: if isAdmin();
    }

    // Public can read single links for redirection.
    // Users can manage their own links.
    // Admins can manage any link.
    match /links/{linkId} {
      allow get: if true; // Public read for redirection logic
      allow list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if (isAdmin() || (request.auth.uid == resource.data.userId)) // Owner/admin can edit everything
                    // Public can only update specific fields for click counting
                    || (request.resource.data.keys().hasOnly(['clicks', 'generatedEarnings'])); 
      allow delete: if isAdmin() || (request.auth.uid == resource.data.userId);
    }
    
    // Clicks can be created by anyone.
    // Clicks can be read by the link owner or an admin.
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/links/$(request.query.where.linkId)).data.userId == request.auth.uid);
    }

    // Users can create/read their own payout requests.
    // Admins can manage all payout requests.
    match /payoutRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, list: if isAdmin() || (request.auth.uid == resource.data.userId);
      allow update: if isAdmin();
    }
    
    // CPM history is read-only for authenticated users, managed by admins.
    match /cpmHistory/{cpmId} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
    // Notifications can be read by the user they are for, created by admins.
    match /notifications/{notificationId} {
      allow read, list: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if isAdmin();
    }

  }
}
