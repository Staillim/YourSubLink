rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isUserAuthenticated() {
      return request.auth != null;
    }

    // --- Collection Rules ---

    // USERS: Only admins or the user themselves can access user profiles.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      // Users are created via a Firebase function or on first login, not directly.
      allow create: if isOwner(userId);
    }

    // LINKS: Public read, but restricted write/update for users and admins.
    match /links/{linkId} {
      // ANYONE can read link data. This is CRITICAL for public access.
      allow get, list: if true;

      // AUTHENTICATED USERS can create links.
      allow create: if isUserAuthenticated();
      
      // USERS can only update/delete their own links.
      allow update, delete: if isOwner(resource.data.userId);

      // ANYONE can update ONLY the 'clicks' and 'generatedEarnings' fields.
      // This is essential for the public click counting mechanism.
      allow update: if request.resource.data.keys().hasOnly(['clicks', 'generatedEarnings']);
      
      // ADMINS have full read/write access to all links.
      allow write: if isAdmin(); // `write` covers create, update, delete
      allow read: if isAdmin();
    }
    
    // CLICKS: Anyone can create a click record.
    match /clicks/{clickId} {
        allow create: if true;
        
        // Users can read their own clicks' data (for detailed stats), Admins can read all.
        allow read, list: if isAdmin() || (isUserAuthenticated() && get(/databases/$(database)/documents/links/$(request.resource.data.linkId)).data.userId == request.auth.uid);
    }

    // PAYOUT REQUESTS: Only users can create for themselves, only admins can manage.
    match /payoutRequests/{requestId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow write: if isAdmin();
    }

    // CPM HISTORY: Anyone can read it (needed for client-side earnings calculation), only admins can change it.
    match /cpmHistory/{cpmId} {
        allow read, list: if true;
        allow write: if isAdmin();
    }

    // NOTIFICATIONS: Users can read their own, admins can read all. System creates them.
    match /notifications/{notificationId} {
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow create: if true; // Allows system-generated notifications
    }
  }
}
