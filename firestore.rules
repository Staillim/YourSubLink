
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Admins can read/write all user data. Users can only manage their own profile.
    match /users/{userId} {
      allow read, write: if isAdmin() || request.auth.uid == userId;
    }

    // Link Management:
    // - Anyone can get a single link for redirection.
    // - Authenticated users can list their own links. Admins can list all.
    // - Authenticated users can create links for themselves.
    // - Link updates are restricted:
    //   - Anyone can update 'clicks' and 'generatedEarnings' (for counting).
    //   - Only owners/admins can update other fields.
    // - Only owners/admins can delete.
    match /links/{linkId} {
      allow get: if true;
      allow list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings'])) ||
                     (isAdmin() || (request.auth.uid == resource.data.userId));
      allow delete: if isAdmin() || (request.auth.uid == resource.data.userId);
    }
    
    // Clicks can be created by anyone (client-side).
    // Click data can be read by the link owner or an admin.
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid);
    }

    // Users can create/read their own payout requests.
    // Admins can manage all payout requests.
    match /payoutRequests/{requestId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, list: if isAdmin() || (request.auth != null && request.query.where.userId == request.auth.uid);
      allow update: if isAdmin();
    }
    
    // CPM history is read-only for authenticated users, managed by admins.
    match /cpmHistory/{cpmId} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }
    
    // Notifications can be read by the user they are for. Created by system/admin.
    match /notifications/{notificationId} {
      allow read, list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow create: if isAdmin(); 
    }

  }
}
