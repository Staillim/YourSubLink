
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own profile
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
      // Admins can read any user profile
      allow get: if request.auth != null && isAdmin();
      allow list: if request.auth != null && isAdmin();
    }
    
    // Link documents
    match /links/{linkId} {
        // Anyone can read a link document
        allow get;
        // Authenticated users can create/delete/update their own links
        allow create, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Allow public updates only to specific earning fields and clicks
        allow update: if request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings'] + request.resource.data.diff(resource.data).affectedKeys().filter(key => key.startsWith('earningsByCpm')));
        // Authenticated users can update their own links
        allow update: if request.auth != null && resource.data.userId == request.auth.uid;
        // Admins can manage all links
        allow read, write: if request.auth != null && isAdmin();
    }

    // Clicks can be created by anyone
    match /clicks/{clickId} {
        allow create: if true;
        // Admins can read clicks for stats
        allow read: if request.auth != null && isAdmin();
    }
    
    // Payout requests
    match /payoutRequests/{requestId} {
        // Users can create requests for themselves
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Users can read their own requests
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        // Admins can read and update all requests
        allow read, update: if request.auth != null && isAdmin();
    }
    
    // Notifications can be created by the system (via client), users can read their own.
    match /notifications/{notificationId} {
        allow create: if true;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        // Admins can read all notifications
        allow list: if request.auth != null && isAdmin();
    }
    
    // Settings can be read by anyone, but only written by admins
    match /settings/global {
        allow get: if true;
        allow write: if request.auth != null && isAdmin();
    }

    // CPM History can be read by anyone (needed for client-side earnings calculation), but only written by admins.
    match /cpmHistory/{cpmId} {
        allow get, list: if true;
        allow create, update: if request.auth != null && isAdmin();
    }
  }
}
