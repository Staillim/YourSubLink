rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // USERS Collection
    match /users/{userId} {
      // Anyone can get a user document to check account status (needed for link page).
      allow get: if true;
      // Users can only read their own full profile data. Admins can read anyone's profile.
      allow list, read: if isOwner(userId) || isAdmin();
      // Users can only update their own profile. Admins can update anyone's profile.
      allow update: if isOwner(userId) || isAdmin();
      // No one can create or delete user documents directly through the client.
      allow create, delete: if false;
    }

    // LINKS Collection
    match /links/{linkId} {
      // Anyone can read a single link document to process the redirection. This is safe.
      allow get: if true;
      // Only the owner or an admin can see a list of links.
      allow list, read: if isOwner(get(/databases/$(database)/documents/links/$(linkId)).data.userId) || isAdmin();
      // Only authenticated users can create links.
      allow create: if request.auth != null;
      // Only the owner or an admin can update or delete a link.
      allow update, delete: if isOwner(get(/databases/$(database)/documents/links/$(linkId)).data.userId) || isAdmin();
    }
    
    // CLICKS Collection
    match /clicks/{clickId} {
        // Anyone can create a click document. This is required for anonymous visitors.
        // We secure this by checking the link's owner status in the client before attempting to write.
        allow create: if true;
        // No one should be able to read, list, update or delete clicks from the client.
        allow read, list, update, delete: if false;
    }

    // CPM HISTORY Collection (Admin Only)
    match /cpmHistory/{historyId} {
      allow read, list, create, update, delete: if isAdmin();
    }
    
    // PAYOUT REQUESTS Collection
    match /payoutRequests/{requestId} {
      // Users can read/list/create their own requests. Admins can do anything.
      allow read, list, create: if isOwner(request.resource.data.userId) || isAdmin();
      // Only Admins can update/delete (approve/reject) requests.
      allow update, delete: if isAdmin();
    }
    
    // NOTIFICATIONS Collection
    match /notifications/{notificationId} {
      // Users can read/list/update their own notifications.
      allow read, list, update: if isOwner(request.resource.data.userId);
      // Notifications are created by backend processes or admin actions, not directly by users.
      // Admins can create them.
      allow create: if isAdmin();
      // No one deletes notifications from the client.
      allow delete: if false;
    }

    // SUPPORT TICKETS Collection
    match /supportTickets/{ticketId} {
       // Users can read/list/create/update their own tickets. Admins can do anything.
       allow read, list, create, update: if isOwner(request.resource.data.userId) || isAdmin();
       // No one can delete tickets.
       allow delete: if false;

       // MESSAGES Sub-collection
       match /messages/{messageId} {
         // The owner of the ticket or an admin can read messages.
         allow read, list: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
         // The owner of the ticket or an admin (acting as 'support') can create messages.
         allow create: if isOwner(get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId) || isAdmin();
         // No one can update/delete messages.
         allow update, delete: if false;
       }
    }
  }
}
