rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
    }
    
    match /links/{linkId} {
      // 1. Authenticated users can create, update, or delete their own links.
      // 2. Admins can create, update, or delete any link.
      // 3. Unauthenticated visitors can ONLY update the 'clicks' and 'generatedEarnings' fields.
      allow create: if isOwner(request.resource.data.userId) || isAdmin();
      allow read: if true;
      allow update: if (isOwner(resource.data.userId) || isAdmin()) ||
                      (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'generatedEarnings']));
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /clicks/{clickId} {
      // Anyone can create a click log (this happens server-side via ClientComponent).
      // Reading click logs should be restricted.
      allow create: if true;
      allow read, list: if isAdmin(); // Only admins can analyze click patterns
    }

    match /payoutRequests/{requestId} {
        allow create: if isOwner(request.resource.data.userId);
        allow read, update: if isOwner(resource.data.userId) || isAdmin();
        // Users can only list their own requests. Admins can list all.
        allow list: if (isOwner(request.query.resource.data.userId) && request.query.resource.data.userId == request.auth.uid) || isAdmin();
    }

    match /cpmHistory/{cpmId} {
        allow read, list: if request.auth != null;
        allow create, update: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow read, update: if isOwner(resource.data.userId) || isAdmin();
        allow create: if isAdmin(); // Notifications are created by the system (admin)
        // Users can only list their own notifications. Admins can list all.
        allow list: if (isOwner(request.query.resource.data.userId) && request.query.resource.data.userId == request.auth.uid) || isAdmin();
    }
    
    match /supportTickets/{ticketId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
      // Users can only list their own tickets. Admins can list all.
      allow list: if (isOwner(request.query.resource.data.userId) && request.query.resource.data.userId == request.auth.uid) || isAdmin();
      
      match /messages/{messageId} {
        // An admin can do anything. A user can read/create/list if they own the parent ticket.
        allow read, list, create: if isAdmin() || get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid;
      }
    }
  }
}
