
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Users Collection
    // - Authenticated users can read their own profile.
    // - Authenticated users can update their own displayName and photoURL.
    // - Admins can read and write to any user profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow update: if request.auth.uid == userId && request.resource.data.keys().hasAll(['displayName', 'photoURL']);
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Links Collection
    // - Authenticated users can create links.
    // - Users can read, update, and delete their own links.
    // - Admins can read, update, and delete any link.
    // - Anyone can read a link document (needed for the /link/[shortId] page).
    match /links/{linkId} {
      allow create: if request.auth.uid != null;
      allow read: if true;
      allow update, delete: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Clicks Collection
    // - Anyone can create a click document. This is critical for ensuring no visits are lost.
    // - The document being created MUST only contain linkId and timestamp.
    // - No one can read, update, or delete click documents from the client-side.
    match /clicks/{clickId} {
      allow create: if request.resource.data.keys().hasAll(['linkId', 'timestamp']) && request.resource.data.size() == 2;
      allow read, update, delete: if false;
    }

    // CPM History Collection
    // - Only admins can read or write to the CPM history.
    match /cpmHistory/{historyId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Payout Requests Collection
    // - Users can create their own payout requests.
    // - Users can read their own payout requests.
    // - Admins can read and update any payout request.
    match /payoutRequests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow delete: if false;
    }

    // Notifications Collection
    // - Users can read their own notifications.
    // - Only the server/admins can create notifications.
    // - Users can update the isRead status of their own notifications.
    match /notifications/{notificationId} {
        allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow read: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update: if resource.data.userId == request.auth.uid;
        allow delete: if false;
    }

    // Support Tickets Collection
    // - Users can create and read their own tickets.
    // - Users can update their own tickets (isReadByUser field).
    // - Admins can read and update any ticket.
    match /supportTickets/{ticketId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow update: if resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Support Ticket Messages Subcollection
    // - Users can write messages to their own tickets.
    // - Admins can write messages to any ticket.
    // - Both users and admins can read messages from tickets they have access to.
    match /supportTickets/{ticketId}/messages/{messageId} {
        allow read: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow create: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
