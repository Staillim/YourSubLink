
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth.uid == resource.data.userId
                       || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings']);
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    match /clicks/{clickId} {
      allow create: if true;
      // Allow reading clicks if the user is an admin OR if they own the link associated with the click.
      allow read: if isAdmin() || get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid;
      allow write: if false;
    }

    match /payoutRequests/{payoutId} {
      allow read, update: if isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    match /notifications/{notificationId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow create: if true; // Created by server
        allow write: if false;
    }
    
    match /cpmHistory/{cpmId} {
        allow read: if isAdmin();
        allow write: if isAdmin();
    }
  }
}
