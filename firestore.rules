
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
    }

    match /links/{linkId} {
      allow get, list: if true;
      allow create: if request.auth.uid == request.resource.data.userId;

      // Allow owner/admin to update/delete.
      // Also allow public client to increment click counts, but not set them arbitrarily.
      allow update: if (resource.data.userId == request.auth.uid || isAdmin()) ||
                    (request.auth == null && request.resource.data.clicks == resource.data.clicks + 1);
      
      allow delete: if resource.data.userId == request.auth.uid || isAdmin();
    }
    
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if request.auth != null;
    }

    match /dailyStats/{day} {
        allow create, update: if true;
        allow read, list: if isAdmin();
    }
    
    match /notifications/{notificationId} {
        allow create: if true;
        allow read, list: if request.auth != null;
    }

    match /payoutRequests/{requestId} {
        allow create: if request.auth != null;
        allow read, list: if request.auth.uid == resource.data.userId || isAdmin();
        allow update: if isAdmin();
    }
    
    match /settings/global {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /cpmHistory/{historyId} {
        allow get, list: if true;
        allow write: if isAdmin();
    }
  }
}
