
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update: if (request.auth != null && resource.data.userId == request.auth.uid) ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings']));
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /clicks/{clickId} {
      allow create: if true;
      allow read: if false; // Clicks are private and should not be read by clients
    }
    
    match /payoutRequests/{payoutId} {
        allow read, write: if request.auth != null; // User can read/write their own, admin can read/write all (checked in code)
    }

    match /notifications/{notificationId} {
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        allow create: if true; // Let server create them
    }

    match /cpmHistory/{cpmId} {
        allow read: if true;
        allow write: if request.auth != null; // Admin only logic in code
    }
  }
}
