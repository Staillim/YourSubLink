rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helpers ---
    function isAdmin() {
      return get(
        /databases/$(database)/documents/users/$(request.auth.uid)
      ).data.role == 'admin';
    }
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- users ---
    match /users/{userId} {
      allow read:   if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
    }

    // --- links ---
    match /links/{linkId} {
      allow read:   if true;
      allow create: if isOwner(request.resource.data.userId) || isAdmin();
      allow update, delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // --- clicks (registro separado) ---
    // Cualquiera puede crear un registro de clic. Esto es seguro porque
    // solo están añadiendo un nuevo documento con datos mínimos.
    // Solo los administradores pueden leer la lista completa.
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin();
    }

    // --- payoutRequests ---
    match /payoutRequests/{requestId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read:   if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin();
      // Permite a los usuarios listar sus propios pagos y a los admins listar todos
      allow list:   if (
                        request.query.where.path == 'userId'
                        && request.query.where.value == request.auth.uid
                      )
                      || isAdmin();
    }

    // --- cpmHistory ---
    match /cpmHistory/{cpmId} {
      allow read, list:    if request.auth != null;
      allow create, update: if isAdmin();
    }

    // --- notifications ---
    match /notifications/{notificationId} {
      allow read, list, update: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAdmin(); // Solo admins (o funciones de servidor) crean notificaciones.
    }

    // --- supportTickets y mensajes ---
    match /supportTickets/{ticketId} {
      allow create: if isOwner(request.resource.data.userId);
      allow read:   if isOwner(resource.data.userId) || isAdmin();
      allow update: if isAdmin()
                   || (
                     isOwner(resource.data.userId)
                     && request.resource.data.diff(resource.data)
                          .affectedKeys()
                          .hasOnly([
                            'lastMessage',
                            'lastMessageTimestamp',
                            'isReadByAdmin',
                            'isReadByUser',
                            'status'
                          ])
                   );
      allow list:   if (
                        request.query.where.path == 'userId'
                        && request.query.where.value == request.auth.uid
                      )
                    || isAdmin();
      
      match /messages/{messageId} {
        allow read, list: if isAdmin()
                         || get(
                              /databases/$(database)/documents/supportTickets/$(ticketId)
                            ).data.userId == request.auth.uid;
        allow create: if isAdmin() || (request.resource.data.senderId == request.auth.uid);
      }
    }
  }
}
