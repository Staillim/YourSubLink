rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Allow read access to a user's own role or if the user is an admin.
      // This is a simplified check. For production, custom claims are recommended.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isOwner(userId);
      // Admins can update roles, users can update their own display name.
      allow update(userId): if isAdmin() || (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName']));
    }

    match /links/{linkId} {
      allow read;
      allow create: if isOwner(request.resource.data.userId);
      // Public can update click counts. Owners/Admins can update details.
      allow update: if (request.auth == null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings', 'earningsByCpm'])) || (isOwner(resource.data.userId) || isAdmin());
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /clicks/{clickId} {
      allow create; // Anyone can create a click
      // Allow listing clicks if the query is filtered by a linkId owned by the user, or if the user is an admin.
      allow list: if request.auth != null && (get(/databases/$(database)/documents/links/$(request.query.linkId)).data.userId == request.auth.uid || isAdmin());
      // Allow reading a click document if the user owns the link or is an admin.
      allow read: if request.auth != null && (get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId == request.auth.uid || isAdmin());
    }
    
    match /cpmHistory/{cpmId} {
        allow read; // Anyone can read CPM rates
        allow write: if isAdmin(); // Only admins can change them
    }

    match /payoutRequests/{payoutId} {
        allow create: if isOwner(request.resource.data.userId);
        allow list: if isOwner(resource.data.userId) || isAdmin();
        allow read: if isOwner(resource.data.userId) || isAdmin();
        allow update: if isAdmin(); // Only admins can approve/reject.
    }
    
    match /notifications/{notificationId} {
      allow read, list: if isOwner(resource.data.userId) || isAdmin();
      allow create; // System/anyone can create notifications
    }
  }
}
