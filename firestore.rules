rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Links can be read by anyone to display the LinkGate, but only the owner or an admin can modify them.
    match /links/{linkId} {
      allow get: if true;
      allow list, create, update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Clicks can be CREATED by anyone (to log a visit), but cannot be read or modified by users.
    // This rule is critical for the link redirection flow to work correctly.
    // Admins can read the clicks for analysis.
    match /clicks/{clickId} {
      // Allow creation if the link exists and its owner is not suspended.
      allow create: if request.resource.data.processed == false && exists(/databases/$(database)/documents/links/$(request.resource.data.linkId)) && get(/databases/$(database)/documents/links/$(request.resource.data.linkId)).data.accountStatus != 'suspended';
      
      // Only admins can read, update, or delete click logs.
      allow read, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/update their own profile. Admins can read/write any profile.
    match /users/{userId} {
      allow get, update: if request.auth != null && request.auth.uid == userId;
      allow list, create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Payout requests can only be read by their owner or an admin. Only admins can modify them.
    match /payoutRequests/{requestId} {
      allow get, list: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Notifications can only be accessed by the user they are intended for or an admin.
    match /notifications/{notificationId} {
      allow read, update, list: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // CPM History is read-only for users, but writable by admins.
    match /cpmHistory/{historyId} {
        allow get, list: if request.auth != null;
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Support tickets can be read/written by the owner or an admin.
    match /supportTickets/{ticketId} {
      allow get, list, create, update, delete: if request.auth != null && (request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // Messages within a ticket follow the same rule.
      match /messages/{messageId} {
        allow get, list, create, update, delete: if request.auth != null && (request.auth.uid == get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      }
    }
  }
}
