rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Function to check if the requesting user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
      allow list: if isAdmin();
    }

    // Rules for the links collection
    match /links/{linkId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      // Public update is needed for counters from the redirection page
      allow update: if request.auth.uid == resource.data.userId || isAdmin() || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['clicks', 'realClicks', 'generatedEarnings', 'earningsByCpm']);
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
      allow list: if isAdmin();
    }
    
    // Rules for individual clicks
    match /clicks/{clickId} {
      allow create: if true;
      allow read, list: if isAdmin() || (request.auth.uid != null && request.auth.uid == get(/databases/$(database)/documents/links/$(resource.data.linkId)).data.userId);
    }

    // Rules for payout requests
    match /payoutRequests/{payoutId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, list: if request.auth.uid == resource.data.userId || isAdmin();
      allow update: if isAdmin();
    }
    
    // Rules for notifications
    match /notifications/{notificationId} {
      allow create: if true; // System-generated notifications
      allow read, list: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Rules for global settings
    match /settings/global {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Rules for CPM rate history
    match /cpmHistory/{historyId} {
      allow read: if true;
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }
    
    // Rules for daily statistics
    match /dailyStats/{statId} {
      // Allow public write to increment counters
      allow create, update: if true;
      allow read, list: if isAdmin();
    }
  }
}
