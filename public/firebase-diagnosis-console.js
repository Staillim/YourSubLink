// === SCRIPT DE DIAGN√ìSTICO DE FIREBASE PARA CONSOLA ===
// Ejecutar l√≠nea por l√≠nea en la consola del navegador

console.log('üîç === DIAGN√ìSTICO DE FIREBASE Y SPONSORS ===');

// Paso 1: Verificar linkId
const linkId = window.location.pathname.split('/').pop();
console.log('üîó LinkId actual:', linkId);

// Paso 2: Verificar Firebase en contexto global
console.log('üî• Verificando Firebase...');

// Buscar Firebase en el contexto de la aplicaci√≥n Next.js
const checkFirebase = () => {
  // M√©todo 1: Buscar en window
  if (window.firebase) {
    console.log('‚úÖ Firebase encontrado en window.firebase');
    return window.firebase;
  }
  
  // M√©todo 2: Buscar en contexto de React (Next.js)
  try {
    const nextData = window.__NEXT_DATA__;
    if (nextData) {
      console.log('‚úÖ Next.js detectado');
    }
  } catch (e) {
    console.log('‚ö†Ô∏è Next.js no detectado en window.__NEXT_DATA__');
  }
  
  // M√©todo 3: Buscar m√≥dulos cargados
  if (window.webpackChunkName) {
    console.log('‚úÖ Webpack chunks detectados (app compilada)');
  }
  
  return null;
};

const firebaseInstance = checkFirebase();

// Paso 3: M√©todo manual para query Firebase
console.log('üìù EJECUTA ESTE C√ìDIGO MANUALMENTE PARA QUERY FIREBASE:');
console.log(`
// === C√ìDIGO PARA EJECUTAR MANUALMENTE ===
// 1. Abre una nueva pesta√±a en tu aplicaci√≥n
// 2. Ve a cualquier p√°gina que use Firebase (como dashboard)
// 3. En la consola, ejecuta:

const testFirebaseConnection = async () => {
  try {
    // Buscar Firebase en el contexto de la aplicaci√≥n
    const modules = Object.keys(window).filter(key => key.includes('firebase') || key.includes('fire'));
    console.log('üîç M√≥dulos relacionados con Firebase:', modules);
    
    // Si Firebase est√° disponible, hacer query de sponsors
    // (Este c√≥digo solo funcionar√° si Firebase est√° cargado en el contexto)
    
    console.log('üí° Si ves errores de Firebase, ejecuta este c√≥digo en una p√°gina con Firebase activo (como /dashboard)');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  }
};

testFirebaseConnection();
`);

// Paso 4: Verificar estado actual del DOM
console.log('üîç Verificando estado actual del DOM...');

// Verificar estructura de la p√°gina
const bodyClasses = document.body.className;
const htmlClasses = document.documentElement.className;
console.log('üìÑ Body classes:', bodyClasses);
console.log('üìÑ HTML classes:', htmlClasses);

// Verificar si es una p√°gina de link
const isLinkPage = window.location.pathname.includes('/link/') || window.location.pathname.match(/\/[a-zA-Z0-9]+$/);
console.log('üîó Es p√°gina de link:', isLinkPage);

// Verificar meta tags de la p√°gina
const metaTags = Array.from(document.querySelectorAll('meta')).map(meta => ({
  name: meta.name || meta.property,
  content: meta.content
})).filter(meta => meta.name);

console.log('üìã Meta tags relevantes:');
metaTags.slice(0, 5).forEach(tag => {
  console.log(`  ${tag.name}: ${tag.content}`);
});

// Paso 5: Buscar evidencia de carga de sponsors
console.log('üîç Buscando evidencia de sponsors...');

// Buscar en localStorage/sessionStorage
const localStorageKeys = Object.keys(localStorage).filter(key => 
  key.includes('sponsor') || key.includes('firebase') || key.includes('auth')
);
console.log('üíæ LocalStorage keys relevantes:', localStorageKeys);

// Buscar scripts cargados
const scripts = Array.from(document.scripts).map(script => script.src).filter(src => src);
const firebaseScripts = scripts.filter(src => src.includes('firebase') || src.includes('googleapis'));
console.log('üìú Scripts de Firebase cargados:', firebaseScripts.length);

// Paso 6: Instrucciones espec√≠ficas
console.log(`
üéØ === INSTRUCCIONES ESPEC√çFICAS PARA TU CASO ===

PASO 1: Ejecuta este nuevo script mejorado:
await import('/sponsor-diagnosis-console.js')

PASO 2: Si no hay sponsors en DOM, ve a una p√°gina con Firebase activo:
- Navega a /dashboard
- En la consola ejecuta:

const querySponsorsManually = async () => {
  const linkId = '${linkId}'; // Tu linkId actual
  
  // Buscar Firebase en el contexto global de la p√°gina del dashboard
  const firebase = window.firebase || window.__firebase__ || window._firebase;
  
  if (!firebase) {
    console.log('‚ùå Firebase no disponible en esta p√°gina');
    return;
  }
  
  console.log('‚úÖ Firebase encontrado, haciendo query...');
  // Continuar con query de sponsors
};

PASO 3: Verificar Network tab para requests bloqueados
PASO 4: Reportar resultados aqu√≠
`);

export {};
